
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
   &kp ESC    &kp N1  &kp N2  &kp N3  &kp N4  &kp N5            &kp DEL                                                                  &mo 3  &kp N6  &kp N7     &kp N8    &kp N9    &kp N0  &kp MINUS
   &kp TAB     &kp Q   &kp W   &kp E   &kp R   &kp T              &none                                                                  &none   &kp Y   &kp U      &kp I     &kp O     &kp P   &kp BSLH
 &kp LCTRL     &kp A   &kp S   &kp D   &kp F   &kp G              &none   &kp LALT  &kp HOME                        &kp END   &kp RALT   &none   &kp H   &kp J      &kp K     &kp L  &kp SEMI    &kp SQT
 &kp LSHFT     &kp Z   &kp X   &kp C   &kp V   &kp B                                &kp LGUI                  &mt LGUI RGUI                      &kp N   &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp RSHFT
     &mo 2  &kp LGUI   &none   &none   &none                      &mo 1  &kp SPACE     &none                          &none  &kp ENTER   &mo 1          &kp UP   &kp DOWN  &kp LBKT  &kp RBKT      &mo 2
            >;
        };

        layer_keypad {
            bindings = <
             &trans  &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &kp LG(N4)  &kp LG(N5)            &none                                                                 &none  &kp LG(N6)  &kp LG(N7)     &kp LG(N8)   &kp LG(N9)         &none         &kp F12
        &kp LG(TAB)     &kp ESC       &none       &none       &none       &none            &none                                                                 &none       &none   &kp MINUS       &kp PLUS    &kp EQUAL  &kp KP_MINUS    &kp LC(RBKT)
          &kp TILDE      &kp N1      &kp N2      &kp N3      &kp N4      &kp N5            &none         &trans  &trans                  &trans         &trans  &trans    &kp LEFT    &kp DOWN         &kp UP    &kp RIGHT         &none       &kp GRAVE
 &kp LG(LEFT_SHIFT)      &kp N6      &kp N7      &kp N8      &kp N9      &kp N0                                  &trans                  &trans                              &none       &none  &kp LG(COMMA)  &kp LG(DOT)         &none  &kp LG(RSHIFT)
              &mo 2       &none       &none       &none       &none                        &mo 1  &kp LG(ENTER)  &trans                  &trans  &kp LG(ENTER)   &mo 1                   &none          &none   &kp LS(N9)    &kp LS(N0)           &mo 2
            >;
        };

        layer_fn {
            bindings = <
       &none   &none   &none   &none   &none   &none            &tog 1                                                    &none     &none       &none         &none              &none              &none   &none
 &kp LG(TAB)   &none   &none   &none   &none   &none             &none                                                    &none     &none  &kp C_MUTE  &kp C_VOL_DN       &kp C_VOL_UP              &none   &none
   &kp TILDE  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5             &none  &trans  &trans                  &trans  &trans  &kp DEL  &kp BSPC     &kp F10       &kp F11            &kp F12              &none   &none
       &none  &kp F6  &kp F7  &kp F8  &kp F9   &none                            &trans                  &trans                      &none       &none         &none              &none              &none   &none
      &trans   &none   &none   &none   &none                    &trans  &trans  &trans                  &trans  &trans   &trans                 &none         &none  &mt LGUI LS(LBKT)  &mt LGUI LS(RBKT)  &trans
            >;
        };

    };
};
