
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
          &kp MINUS            &kp N1            &kp N2    &kp N3     &kp N4  &kp N5                &none                                                                                                      &mo 3  &kp N6  &kp N7     &kp N8    &kp N9                        &kp N0           &kp EQUAL
            &kp TAB             &kp Q             &kp W     &kp E      &kp R   &kp T                &none                                                                                                  &kp GRAVE   &kp Y   &kp U      &kp I     &kp O                         &kp P            &kp BSLH
          &kp LCTRL             &kp A             &kp S     &kp D      &kp F   &kp G            &kp GRAVE    &kp ESC          &kp BSPC                                    &mt RALT TAB  &kp RIGHT_ALT  &kp BACKSPACE   &kp H   &kp J      &kp K     &kp L  &mt SEMICOLON LG(LEFT_SHIFT)        &mt RALT SQT
          &kp LSHFT             &kp Z             &kp X     &kp C      &kp V   &kp B                &none      &none  &kp LEFT_COMMAND   &none   &none  &mt LEFT_COMMAND RIGHT_COMMAND          &none          &none   &kp N   &kp M  &kp COMMA   &kp DOT                      &kp FSLH           &kp RSHFT
 &sk LG(LEFT_SHIFT)  &kp LEFT_COMMAND  &kp LEFT_COMMAND  &kp LEFT  &kp RIGHT                        &mo 1  &kp SPACE  &kp LEFT_COMMAND                  &mt LEFT_COMMAND RIGHT_COMMAND      &kp ENTER          &mo 1          &kp UP   &kp DOWN  &kp LBKT                      &kp RBKT  &sk LG(LEFT_SHIFT)
            >;
        };

        layer_MOD {
            bindings = <
       &none  &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &kp LG(N4)  &kp LG(N5)            &none                                                                            &none  &kp LG(N6)  &kp LG(N7)     &kp LG(N8)    &kp LG(N9)         &none       &kp F12
 &kp LG(TAB)     &kp ESC       &none       &none       &none       &none            &none                                                                           &trans       &none       &none          &none     &kp EQUAL         &none  &kp LC(RBKT)
   &kp TILDE      &kp N1      &kp N2      &kp N3      &kp N4      &kp N5            &none         &trans  &trans                  &trans         &trans  &sk LG(BACKSPACE)    &kp LEFT    &kp DOWN         &kp UP     &kp RIGHT       &kp ESC         &none
      &trans      &kp N6      &kp N7      &kp N8      &kp N9      &kp N0            &none          &none  &trans   &none   &none  &trans          &none              &none      &trans      &trans  &kp LG(COMMA)   &kp LG(DOT)        &trans        &trans
      &trans      &trans      &trans      &trans      &trans                        &mo 2  &sk LG(ENTER)  &trans                  &trans  &sk LG(ENTER)              &mo 2                  &trans         &trans  &kp LG(LBKT)  &kp LG(RBKT)        &trans
            >;
        };

        layer_FN {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans    &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans    &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5            &trans  &trans  &trans                  &trans  &trans  &trans  &kp BSPC  &trans  &trans  &trans  &trans  &trans
 &trans  &kp F6  &kp F7  &kp F8  &kp F9  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
